# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
#            - '../src/DependencyInjection/'
#            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Modules\Auth\EventListener\JwtAuthenticationFailureListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_failure, method: onAuthenticationFailure }
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_not_found, method: onJwtNotFound }

    App\Common\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }


    app.jwt_authenticator:
        class: App\Common\Security\JWTAuthenticator
        parent: lexik_jwt_authentication.security.jwt_authenticator

    # TODO: definitely need to refactor this, but for now it works
    # autowiring services based on DB Implementation
    autowire_factory:
        class: App\Common\AutowireFactory\AutowireFactory
        arguments: ['@service_container']
        public: true

#    # User Module Autowire
#    user_factory:
#        factory: ['@autowire_factory', 'usingDatabaseImplementation']
#        arguments: ['App\Modules\User\Factory\{DB_IMPL}\UserFactory']
#        class: App\Modules\User\Factory\UserFactoryInterface

    user_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\User\Repository\{DB_IMPL}\UserRepository']
        class: App\Modules\User\Repository\UserRepositoryInterface
    App\Modules\User\Repository\MongoDB\UserRepository:
        public: true
    App\Modules\User\Repository\MariaDB\UserRepository:
        public: true

    organizational_unit_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\OrganizationalUnit\Repository\{DB_IMPL}\OrganizationalUnitRepository']
        class: App\Modules\OrganizationalUnit\Repository\OrganizationalUnitRepositoryInterface
    App\Modules\OrganizationalUnit\Repository\MongoDB\OrganizationalUnitRepository:
        public: true
    App\Modules\OrganizationalUnit\Repository\MariaDB\OrganizationalUnitRepository:
        public: true

    league_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\League\Repository\{DB_IMPL}\LeagueRepository']
        class: App\Modules\League\Repository\LeagueRepositoryInterface
    App\Modules\League\Repository\MongoDB\LeagueRepository:
        public: true
    App\Modules\League\Repository\MariaDB\LeagueRepository:
        public: true

    season_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\Season\Repository\{DB_IMPL}\SeasonRepository']
        class: App\Modules\Season\Repository\SeasonRepositoryInterface
    App\Modules\Season\Repository\MongoDB\SeasonRepository:
        public: true
    App\Modules\Season\Repository\MariaDB\SeasonRepository:
        public: true

    season_team_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\SeasonTeam\Repository\{DB_IMPL}\SeasonTeamRepository']
        class: App\Modules\SeasonTeam\Repository\SeasonTeamRepositoryInterface
    App\Modules\SeasonTeam\Repository\MongoDB\SeasonTeamRepository:
        public: true
    App\Modules\SeasonTeam\Repository\MariaDB\SeasonTeamRepository:
        public: true

    team_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\Team\Repository\{DB_IMPL}\TeamRepository']
        class: App\Modules\Team\Repository\TeamRepositoryInterface
    App\Modules\Team\Repository\MongoDB\TeamRepository:
        public: true
    App\Modules\Team\Repository\MariaDB\TeamRepository:
        public: true

    round_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\Round\Repository\{DB_IMPL}\RoundRepository']
        class: App\Modules\Round\Repository\RoundRepositoryInterface
    App\Modules\Round\Repository\MongoDB\RoundRepository:
        public: true
    App\Modules\Round\Repository\MariaDB\RoundRepository:
        public: true

    game_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\Game\Repository\{DB_IMPL}\GameRepository']
        class: App\Modules\Game\Repository\GameRepositoryInterface
    App\Modules\Game\Repository\MongoDB\GameRepository:
        public: true
    App\Modules\Game\Repository\MariaDB\GameRepository:
        public: true

    game_event_repository:
        factory: ['@autowire_factory', 'usingDatabaseImplementation']
        arguments: ['App\Modules\GameEvent\Repository\{DB_IMPL}\GameEventRepository']
        class: App\Modules\GameEvent\Repository\GameEventRepositoryInterface
    App\Modules\GameEvent\Repository\MongoDB\GameEventRepository:
        public: true
    App\Modules\GameEvent\Repository\MariaDB\GameEventRepository:
        public: true
